---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
// 我们将复用我们的Card组件，因为它已经很完美了
import Card from '../components/Card.astro';

// 数据获取和排序保持不变
const allExhibits = await getCollection('exhibits');
allExhibits.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
---
<Layout title="所有展品 - 寂静画廊">
  <h1>所有展品</h1>
  <p class="subtitle">一份按时间倒序排列的、完整的策展档案。</p>

  <!-- 我们不再使用ul列表，而是使用和首页一样的card-grid布局 -->
  <div class="archive-grid">
		{allExhibits.map((exhibit) => <Card exhibit={exhibit} />)}
	</div>
</Layout>

<style>
  .subtitle {
    text-align: center;
    color: #666;
    margin-top: -1.5rem;
    margin-bottom: 3rem;
  }

  /* --- 这是我们新的“微缩卡片网格”样式 --- */
  .archive-grid {
    display: grid;
    /* 关键改动：让卡片的最小宽度更小，这样一行能容纳更多 */
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)); 
    gap: 1.25rem; /* 间距也稍微缩小一点 */
  }

  /* 
    因为我们直接复用了Card组件，所以不需要为卡片本身写新的样式。
    但是，为了让Card组件在更小的空间里表现更好，我们可以通过
    全局选择器，微调它内部的字体大小。
  */
  .archive-grid :global(.card-content h2) {
    font-size: 1.1rem;
  }
  .archive-grid :global(.card-content p) {
    font-size: 0.9rem;
  }
</style>